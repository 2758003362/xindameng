name: Flask应用打包

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:  # 允许手动触发

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 配置Python环境
        run: |
          # 下载独立的Python环境（确保兼容性）
          wget https://github.com/astral-sh/python-build-standalone/releases/download/20240224/cpython-3.11.8+20240224-x86_64-unknown-linux-gnu-install_only.tar.gz
          
          # 验证下载
          if [ ! -f "cpython-3.11.8+20240224-x86_64-unknown-linux-gnu-install_only.tar.gz" ]; then
            echo "Python压缩包下载失败"
            exit 1
          fi
          
          # 解压Python
          mkdir -p python
          tar -xzf cpython-3.11.8+20240224-x86_64-unknown-linux-gnu-install_only.tar.gz -C python --strip-components=1
          
          # 验证Python安装
          if [ ! -f "./python/bin/python" ]; then
            echo "Python解压失败"
            exit 1
          fi
          echo "Python版本: $(./python/bin/python --version)"

      - name: 安装依赖
        run: |
          ./python/bin/python -m pip install --upgrade pip
          ./python/bin/python -m pip install flask==2.2.3 pyinstaller==5.13.0
          
          # 验证依赖安装
          if ./python/bin/python -c "import flask" &> /dev/null; then
            echo "依赖安装成功"
          else
            echo "依赖安装失败"
            exit 1
          fi

      - name: 打包应用
        run: |
          # 假设你的主文件名为app.py，如果实际文件名不同请修改
          if [ ! -f "app.py" ]; then
            echo "未找到主程序文件app.py"
            exit 1
          fi
          
          # 使用pyinstaller打包
          ./python/bin/pyinstaller --onefile --name flask-xml-service \
            --hidden-import=flask \
            app.py
          
          # 验证打包结果
          if [ ! -f "dist/flask-xml-service" ]; then
            echo "打包失败"
            exit 1
          fi
          
          # 显示打包文件信息
          ls -lh dist/flask-xml-service
          file dist/flask-xml-service

      - name: 保存打包产物
        uses: actions/upload-artifact@v4
        with:
          name: flask-xml-service
          path: dist/flask-xml-service
          retention-days: 7

  release:
    needs: build-linux
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: 下载打包产物
        uses: actions/download-artifact@v4
        with:
          name: flask-xml-service

      - name: 创建Release
        uses: softprops/action-gh-release@v2
        with:
          files: flask-xml-service
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}